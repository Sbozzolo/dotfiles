;;; Automatically generated on Fri Nov 25 22:25:40 2016
;;; Invoked by sbozzolo@home.it using 25.1.1
(setq-default kill-ring '(#("'tango" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face highlight-quoted-quote) 1 6 (font-lock-fontified t fontified t font-lock-multiline t face highlight-quoted-symbol)) #("'tango" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face highlight-quoted-quote) 1 6 (fontified t font-lock-fontified t font-lock-multiline t face highlight-quoted-symbol)) #("'tango-dark" 0 1 (face highlight-quoted-quote font-lock-multiline t font-lock-fontified t fontified t) 1 7 (face highlight-quoted-symbol font-lock-multiline t font-lock-fontified t fontified t) 7 11 (face highlight-quoted-symbol font-lock-multiline t font-lock-fontified t fontified t)) #("'sanityinc-solarized" 0 1 (face highlight-quoted-quote font-lock-multiline t font-lock-fontified t fontified t) 1 11 (face highlight-quoted-symbol font-lock-multiline t fontified t font-lock-fontified t) 11 20 (face highlight-quoted-symbol font-lock-multiline t fontified t font-lock-fontified t)) #("sanityinc-solarized-dark" 0 24 (fontified t font-lock-fontified t font-lock-multiline t face highlight-quoted-symbol)) #("'solarixe" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face highlight-quoted-quote) 1 9 (fontified t font-lock-fontified t font-lock-multiline t face highlight-quoted-symbol)) #("'tronesque" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face highlight-quoted-quote) 1 10 (fontified t font-lock-fontified t font-lock-multiline t face highlight-quoted-symbol)) #("'tronesque " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face highlight-quoted-quote) 1 10 (fontified t font-lock-fontified t font-lock-multiline t face highlight-quoted-symbol) 10 11 (fontified t font-lock-fontified t font-lock-multiline t face nil)) "(if (daemonp)
    (add-hook 'after-make-frame-functions
        (lambda (frame)
            (with-selected-frame frame
                (load-theme 'tronesque t))))
    (load-theme 'tronesque t))"))
(setq-default session-file-alist '(("~/MEGA/Scripts/dotfiles/emacs.d/settings.org" 5887 6442 1 nil nil 6443 (overwrite-mode)) ("~/MEGA/Lavoro/Adeodata/report.tex" 23055 22948 1 nil nil 23055 (overwrite-mode)) ("~/MEGA/log_lavoro.org" 1189 913 1 nil nil 1189 (overwrite-mode)) ("~/MEGA/todo.org" 9 373 1 nil nil 12529 (overwrite-mode)) ("~/MEGA/LaTeX/Topologia-Algebrica/notes.tex" 246058 247523 1 nil nil 246471 (overwrite-mode)) ("~/MEGA/money.dat" 3251 2698 1 nil nil 3225 (overwrite-mode)) ("~/MEGA/Lavoro/Adeodata/report.log" 22541 nil 1 nil nil 38477 (overwrite-mode)) ("~/MEGA/LaTeX/Topologia-Algebrica/notes.log" 25667 nil 1 nil nil 82549 (overwrite-mode)) ("~/MEGA/Scripts/dotfiles/emacs.d/org-clock-save.el" 55 nil 1 nil nil 55 (overwrite-mode)) ("~/MEGA/Scripts/dotfiles/emacs.d/elpa-25.1.1/guru-mode-20160415.1921/guru-mode-autoloads.el" 1161 nil 1 nil nil 1161 (overwrite-mode)) ("~/MEGA/Scripts/dotfiles/emacs.d/elpa-25.1.1/use-package-20161031.1025/use-package-autoloads.el" 2929 nil 1 nil nil 2929 (overwrite-mode)) ("~/MEGA/Scripts/dotfiles/emacs.d/elpa-25.1.1/bind-key-20160227.48/bind-key-autoloads.el" 2171 nil 1 nil nil 2171 (overwrite-mode)) ("~/Downloads/Telegram Desktop/auguri_bozzola_0.1/auguri_bozzola_0.1.sh" 56 80 1 nil nil 14 (overwrite-mode)) ("~/settings.org" 5425 5320 1 nil nil 5320 (overwrite-mode)) ("~/MEGA/LaTeX/Topologia-Algebrica/exercises.tex" 6863 6736 1 nil nil 6864 (overwrite-mode)) ("~/MEGA/films.org" 1147 1061 1 nil nil 1148 (overwrite-mode)) ("~/MEGA/books.org" 2618 2791 1 nil nil 2618 (overwrite-mode))))
(setq-default file-name-history '("~/MEGA/LaTeX/Topologia-Algebrica/notes.log" "~/MEGA/Lavoro/Adeodata/report.log" "~/MEGA/LaTeX/Topologia-Algebrica/exercises.log" "~/MEGA/Scripts/dotfiles/emacs.d/custom.el" "~/MEGA/films.org" "~/MEGA/Scripts/dotfiles/emacs.d/lisp/init-local.el" "~/MEGA/books.org" "~/MEGA/Lavoro/email/first_email_Nick.txt" "~/MEGA/LaTeX/Topologia-Algebrica/exercises.tex" "~/MEGA/money.dat" "~/MEGA/LaTeX/Topologia-Algebrica/notes.tex" "~/MEGA/todo.org" "~/MEGA/log_lavoro.org" "~/MEGA/Lavoro/Adeodata/report.tex" "~/MEGA/Scripts/dotfiles/emacs.d/settings.org" "~/MEGA/Scripts/dotfiles/emacs.d/org-clock-save.el" "~/.emacs.d/org-clock-save.el" "~/MEGA/Scripts/dotfiles/zsh/zshrc" "/home/sbozzolo/.zshrc" "/home/sbozzolo/gile"))
(setq-default search-ring '("Si trova c" "teoria del gra" "teoria" "ho la " "assumo s" "assumo " "omologia delle sfere" "successione esatta corta" "Omologia delle" "eccez" "lezione " "omeomorfismo tra " "se e solo se" "se e solo" "s" "PR"))
(setq-default regexp-search-ring '("\\(lezione\\).*?\\(14\\)" "1" ":" "parametri" "tabula" "tabular" "table" "screen" "pro" "\\(pro\\).*?\\(e\\).*?\\(contro\\)" "grazia" "\\(il\\).*?\\(pro\\).*?\\(pos\\)" "estend" "^" "assioni"))
(setq-default Man-topic-history '(#("^emacsc" 0 7 (ivy-index 0))))
(setq-default TeX-command-history '("LaTeX" "Index" "View" #("cle" 0 3 (ivy-index 1)) #("in" 0 2 (ivy-index 0)) #("In" 0 2 (ivy-index 0)) #("inde" 0 4 (ivy-index 0))))
(setq-default TeX-macro-history '(#("index" 0 5 (ivy-index 0)) #("Omologia singolare della coppia ! \\vedi{Omologia singolare relativa}" 0 68 (ivy-index 0)) #("centering" 0 9 (ivy-index 0)) #("label" 0 5 (ivy-index 3)) #("ref" 0 3 (ivy-index 2)) #("footnote" 0 8 (ivy-index 2)) #("usep" 0 4 (ivy-index 0)) #("inde" 0 4 (ivy-index 0)) #("docum" 0 5 (ivy-index 0)) #("include" 0 7 (ivy-index 2)) "usepackage" #("unde" 0 4 (ivy-index 0)) #("footnotete" 0 10 (ivy-index 0)) #("footno" 0 6 (ivy-index 1)) #("incl" 0 4 (ivy-index 1)) #("able" 0 4 (ivy-index 1)) #("newc" 0 4 (ivy-index 0)) #("frac" 0 4 (ivy-index 2)) #("newco" 0 5 (ivy-index 0)) #("usepa" 0 5 (ivy-index 0)) "eqref" "sqrt" "hat" "mathcal" "newcommand" "(" "forall" "poptabs" "lvert" "mathbf" "bar" "acomm" "qedsymbol" "partial" "paragraph" "righrarrow" "[" "pmatrix" "ensuremath" "subsection" "dashbox" "left" "left()" "anticommutator" "delta" "slashed"))
(setq-default command-history '((load-theme (quote sanityinc-solarized-dark) nil nil) (load-theme (quote manoj-dark) nil nil) (load-theme (quote light-blue) nil nil) (load-theme (quote leuven) nil nil) (load-theme (quote dichromacy) nil nil) (load-theme (quote deeper-blue) nil nil) (load-theme (quote adwaita) nil nil) (ispell-change-dictionary "italiano" nil) (flycheck-mode (quote toggle)) (flyspell-mode (quote toggle)) (point-to-register 32 nil) (jump-to-register 7 nil) (TeX-insert-macro "index") (TeX-font nil 2) (pop-to-mark-command) (describe-key [67108925] 1 nil) (insert-char 8364 1 t) (euro 1) (ledger-add-transaction "2016/11/24") (magit-push "master" "origin/master" nil) (describe-key "" 1 nil) (prettify-symbols-mode (quote toggle)) (describe-variable (quote LaTeX-math-list)) (ediff "/home/sbozzolo/MEGA/Scripts/dotfiles/emacs.d/settings.org" "/home/sbozzolo/settings.org") (TeX-insert-macro "Omologia singolare della coppia ! \\vedi{Omologia singolare relativa}") (battery) (describe-function (quote command-execute)) (profiler-report) (profiler-start (quote cpu+mem)) (align-current) (revert-buffer t) (describe-mode) (dunnet) (dun-mode) (dungeon-nil 1) (TeX-font nil 5) (profiler-stop) (TeX-font nil 6) (jump-to-register 32 nil) (TeX-insert-macro "centering") (TeX-insert-macro "label") (TeX-font nil 4) (TeX-insert-macro "ref") (mail nil) (guru-global-mode (quote toggle)) (guru-mode (quote toggle)) (ledger-report "account" nil) (ledger-report "bal" nil) (ledger-add-transaction "2016/10/27")))
(setq-default counsel-descbinds-history '(#("<TAB>" 0 5 (ivy-index 0)) "C-S-SPC         cua-toggle-global-mark" "<C-return>      cua-set-rectangle-mark" #("C-j" 0 3 (ivy-index 0)) #("C-q" 0 3 (ivy-index 1)) #("`c" 0 2 (ivy-index 0)) "C-x 8 RET       insert-char" #("`e" 0 2 (ivy-index 0))))
(setq-default counsel-describe-symbol-history '(#("pop-to-mar" 0 10 (ivy-index 0))))
(setq-default counsel-git-grep-cmd-history '("git --no-pager grep --full-name -n --no-color -i -e %S"))
(setq-default extended-command-history '(#("^" 0 1 (ivy-index 0)) #("^l" 0 2 (ivy-index 0)) "^load" "^load-t" "^isp" "^fl" "^fly" "^is" "^pop-" "^euro" "^mag" "^pre" "^ispe" "^late" "^flyc" "^descri" "^art" "^magi" "^led" "^undo-t" "^pack" "^ali" "^funda" "^gur" "^re" "^eshell" "lcm" "^ansi" "^reve" "^cust" "^ediff"))
(setq-default ido-buffer-history '("init-local.el" "*scratch*" "*tramp/ssh sbozzolo@lcm.mi.infn.it*" "*Messages*" "ising_class.py" "paper.tex" "ising_class.py • sbozzolo" "*Packages*" "session.10246f026e812b8c4f147522278080787200000013830056" "*shell*" "clean.sh" "*unsent mail to sbozzolator@gmail.com*" "*Warnings*" "*Ibuffer*" ".zshrc • /ssh:sbozzolo@lcm.mi.infn.it:" "*eshell*" "script.sh" "esercizi.log" "todo.org_archive" "MEGA" "LaTeX" "LaTeX-works" "Esercizi-di-Cosmologia-e-Buchi-Neri" "esercizi.tex" "*magit: LaTeX-works" "*Help*" "*magit-process: Esercizi-di-Cosmologia-e-Buchi-Neri" "*magit: Esercizi-di-Cosmologia-e-Buchi-Neri" "*~/MEGA/LaTeX/Esercizi-di-Cosmologia-e-Buchi-Neri/esercizi output*" "*TeX Help*" "*Compile-Log*" "books.org" "*Calendar*" "arrow.py" "THE-GNU-PROJECT" "sensible-defaults.el" "esercizi.tex • Esercizi-di-Supersimmetria" "*magit-diff: Esercizi-di-Cosmologia-e-Buchi-Neri" "*magit-revision: Esercizi-di-Cosmologia-e-Buchi-Neri" "*Holidays*" "money.dat"))
(setq-default ido-file-history '("init-local.el" "paper.tex" nil "clean.sh" "." "ising_class.py" ".zshrc" "bash" "ising.py" "books.org" "sensible-defaults.el" "arrow.py" "userGUI.py" "films.org" "materiale_vacanza.org" "math.yasnippet" "lr.yasnippet" "latex-mode/" "alignstar.yasnippet" "esercizi.tex" "old.org.gpg" "trash.org.gpg" "trash.org" "XieKang.m" "init.el" "presentation.tex" "init-org.el" "TODO.org" "analyzeCON.py" "analyze.py" "main.tex" "main.pdf" "Magic.m" "todo.org"))
(setq-default ledger-minibuffer-history '("2016/11/24" "Assets:Wallet:Daily" "2016/10/27" "Assets" "2016/10/26" "2016/10/26	" "2016/10/"))
(setq-default ledger-report-name-prompt-history '("account" #("bal" 0 3 (ivy-index 0))))
(setq-default magit-revision-history '("origin/master" "master" #("origin/master" 0 13 (face magit-branch-remote)) "origin/HEAD"))
(setq-default minibuffer-history '("Alternative scartate" "Prodotto tensore" "sbozzolo" "tabularx" "Appendice" "Analisi dei software" "Escissione e omotopia" "Situazione" "htbp" "float" "csquotes" "Commenti" "Screenshot" "Overview" "l|r" "USR" "Testo" "Venerdì 18 Novembre" "Log" "HubPlanner" "Conclusione" "Pro" "Pro e Contro" "Osservazioni" "Specifiche tecniche" "Planning PME" "italiano" "babel" "Successione di Mayer-Vietoris" "Esercizio " "Applicazioni " "Maths and Programming" "Congettura di Poincaré" "Complessi CW" "Omologia cellulare"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default org-read-date-history '("   " "y    " "            " "                                                "))
(setq-default query-replace-history '("B" "A" "/," "/;" "HubPlanner" "2" "PlanningPME" "1" "perché" "perchè" "\\set{p}" "\\{ p \\}" "k" "\\rar" "\\arrow{r}{}" "(P,P)" "{P,P}" "w" "y" "t" "x" "g" "Y,B" "X,A" "C" "\\gamma" "\\phi" "\\deg" "\\mathrm{deg}" "n-1" "" "*\\factor" "perch" "k-cut" "N-cut" "N" "str(round(" "round(str(" "\\d s^2" "ds^2" "\\d{s^2}" "K" "S" "\\varphi" "^"))
(setq-default set-variable-value-history '("'((?, \"partial \" nil)"))
(setq-default shell-command-history '("ping 8.8.8.8" "ls"))
(setq-default smex-history '(load-theme ispell-change-dictionary flycheck-mode flyspell-mode pop-to-mark-command euro magit-push))
(setq-default string-rectangle-history '("     "))
(setq-default swiper-history '(#("lezione 14" 0 10 (ivy-index 1)) #("1" 0 1 (ivy-index 639)) #(":" 0 1 (ivy-index 351)) #("manca" 0 5 (ivy-index 4)) #("all" 0 3 (ivy-index 235)) #("exam" 0 4 (ivy-index 41))))
(setq-default tex-compile-history '("pdflatex \\\\nonstopmode\\\\input template.tex"))
(setq-default tmm--history '("L==>List All Buffers" "0==>Select Named Buffer...   C-x b" "p==>Previous Buffer     <XF86Back>" "B==>Next Buffer      <XF86Forward>" "C==>*Completions*  *%" "l==>*~/MEGA/LaTeX/T...a/notes output*  *" "I==>*info*  %" "N==>notes.log  %" "c==>custom.el  " "T==>todo.org  " "b==>books.org  " "f==>films.org  " "M==>money.dat  " "e==>exercises.tex  " "m==>*Messages*  *%" "S==>*scratch*  " "i==>init-local.el  " "d==>*dungeon*  *" "t==>*TeX Help*  *%" "h==>*Help*  %" "s==>settings.org  " "n==>notes.tex  *"))
